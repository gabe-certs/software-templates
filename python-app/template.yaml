apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
# some metadata about the template itself
metadata:
  name: Python-App-Template
  title: Python App Template
  description: A template for creating a Python application with GitHub repository setup
spec:
  owner: backstage/techdocs-core
  type: service
  parameters:
    - title: Define App Name/Version and Environment
      required: 
        - name
        - environment
      properties:
        name:
          title: Name
          type: string
          description: Provide a name for the application
          ui:autofocus: true
          ui:options:
            rows: 5
        owner:
          title: Who will be the owner of this component?
          type: string
          description: Owner of the component
          ui:field: OwnerPicker
          ui:options:
            catalogFilter:
              kind: Group
        environment:
          title: Environment
          type: string
          description: Specify the environment for deployment (e.g., dev, staging, prod)
          enum:
            - dev
            - staging
            - prod

  steps:
    - id: fetch-base
      name: Fetch Base
      action: fetch:template
      input:
        url: ./template
        values:
          name: ${{ parameters.name }}
          owner: ${{ parameters.owner }}

    - id: fetch-docs
      name: Fetch Docs
      action: fetch:plain
      input:
        targetPath: ./docs
        url: https://github.com/gabe-certs/python-app/blob/main/docs

    - id: publish
      name: Publish
      action: publish:github
      input:
        description: This is ${{ parameters.name }}
        repoUrl: ${{ parameters.repoUrl }}
        defaultBranch: 'main'
        protectDefaultBranch: false
    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps['publish'].output.repoContentsUrl }}
        catalogInfoPath: "/catalog-info.yaml"

  output:
    links:
      - title: Repository
        url: ${{ steps['publish'].output.remoteUrl }}
